"""
AI Content Generation Service (complete version)
"""
import google.generativeai as genai
import logging
from typing import Optional
from src.config.settings import settings

logger = logging.getLogger(__name__)

class AIService:
    def __init__(self):
        self.model = self._configure_gemini()
    
    def _configure_gemini(self):
        """Configure Gemini AI model"""
        genai.configure(api_key=settings.gemini_api_key)
        return genai.GenerativeModel('models/gemini-1.5-flash')
    
    def generate_av_prompt(self, category: str, content_text: str) -> str:
        """Generate AV prompt (from your original code)"""
        return f"""
        {category} ‡≤µ‡≤ø‡≤≠‡≤æ‡≤ó‡≤ï‡≥ç‡≤ï‡≥Ü ‡≤∏‡≤Ç‡≤¨‡≤Ç‡≤ß‡≤ø‡≤∏‡≤ø‡≤¶‡≤Ç‡≤§‡≥Ü, ‡≤ï‡≥Ü‡≤≥‡≤ó‡≤ø‡≤® ‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤Ü‡≤ß‡≤∞‡≤ø‡≤∏‡≤ø ‡≤í‡≤Ç‡≤¶‡≥Å ‡≤∂‡≤ï‡≥ç‡≤§‡≤ø‡≤Ø‡≥Å‡≤§‡≤µ‡≤æ‡≤¶, ‡≤∂‡≥Å‡≤¶‡≥ç‡≤ß ‡≤ï‡≤®‡≥ç‡≤®‡≤°‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤¨‡≤∞‡≥Ü‡≤Ø‡≤≤‡≥ç‡≤™‡≤ü‡≥ç‡≤ü ‡≤é‡≤ê ‡≤Ü‡≤ß‡≤æ‡≤∞‡≤ø‡≤§ ‡≤∂‡≥Ä‡≤∞‡≥ç‡≤∑‡≤ø‡≤ï‡≥Ü ‡≤∞‡≥Ç‡≤™‡≤ø‡≤∏‡≤ø. 

        ‡≤á‡≤¶‡≤∞ ‡≤Ü‡≤µ‡≥É‡≤§‡≥ç‡≤§‡≤ø ‡≤ü‡≤ø‡≤µ‡≤ø ‡≤®‡≥ç‡≤Ø‡≥Ç‡≤∏‡≥ç ‡≤é‡≤Ç‡≤ï‡≤∞‡≥ç ‡≤â‡≤ö‡≥ç‡≤ö‡≤æ‡≤∞‡≤£‡≥Ü‡≤ó‡≥Ü ‡≤Ö‡≤®‡≥Å‡≤ó‡≥Å‡≤£‡≤µ‡≤æ‡≤ó‡≤ø, ‡≤í‡≤Ç‡≤¶‡≥Å ‡≤π‡≥Ç‡≤∞‡≤£‡≤¶‡≤Ç‡≤§‡≥Ü ‡≤á‡≤∞‡≤≤‡≤ø. ‡≤Ö‡≤Ç‡≤¶‡≤∞‡≥Ü, ‡≤¨‡≥á‡≤∞‡≥Ü ‡≤¨‡≥á‡≤∞‡≥Ü ‡≤µ‡≤æ‡≤ï‡≥ç‡≤Ø‡≤ó‡≤≥ ‡≤¨‡≤¶‡≤≤‡≥Å ‡≤®‡≤ø‡≤∞‡≤Ç‡≤§‡≤∞‡≤µ‡≤æ‡≤ó‡≤ø ‡≤ì‡≤¶‡≤¨‡≤π‡≥Å‡≤¶‡≤æ‡≤¶, ‡≤§‡≥Ä‡≤µ‡≥ç‡≤∞ ‡≤∂‡≥à‡≤≤‡≤ø‡≤Ø ‡≤í‡≤Ç‡≤¶‡≥Å ‡≤™‡≥ç‡≤Ø‡≤æ‡≤∞‡≤æ‡≤ó‡≥ç‡≤∞‡≤æ‡≤´‡≥ç ‡≤Ü‡≤ó‡≤ø‡≤∞‡≤¨‡≥á‡≤ï‡≥Å.

        ‡≤µ‡≤ø‡≤∑‡≤Ø:
        {content_text}

        ‡≤á‡≤¶‡≤®‡≥ç‡≤®‡≥Å ‡≤í‡≤Ç‡≤¶‡≥Å ‡≤∂‡≤ï‡≥ç‡≤§‡≤ø‡≤Ø‡≥Å‡≤§ ‡≤ï‡≤®‡≥ç‡≤®‡≤° ‡≤™‡≥ç‡≤Ø‡≤æ‡≤∞‡≤æ‡≤ó‡≥ç‡≤∞‡≤æ‡≤´‡≥ç ‡≤∞‡≥Ç‡≤™‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤¨‡≤∞‡≥Ü‡≤Ø‡≤ø‡≤∞‡≤ø.
        """
    
    def generate_pkg_prompt(self, category: str, content_text: str) -> str:
        """Generate PKG prompt (from your original code)"""
        return f"""
‡≤®‡≥Ä‡≤µ‡≥Å ‡≤ï‡≤®‡≥ç‡≤®‡≤°‡≤¶ ‡≤π‡≤ø‡≤∞‡≤ø‡≤Ø ‡≤∏‡≥Å‡≤¶‡≥ç‡≤¶‡≤ø ‡≤µ‡≤∞‡≤¶‡≤ø‡≤ó‡≤æ‡≤∞‡≤∞‡≤æ‡≤ó‡≤ø‡≤¶‡≥ç‡≤¶‡≥Å, ‡≤à ‡≤∏‡≥Å‡≤¶‡≥ç‡≤¶‡≤ø '{category}' ‡≤µ‡≤∞‡≥ç‡≤ó‡≤ï‡≥ç‡≤ï‡≥Ü ‡≤∏‡≥á‡≤∞‡≤ø‡≤¶ ‡≤µ‡≤∞‡≤¶‡≤ø. ‡≤ï‡≥Ü‡≤≥‡≤ó‡≤ø‡≤® ‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø‡≤Ø ‡≤Ü‡≤ß‡≤æ‡≤∞‡≤¶ ‡≤Æ‡≥á‡≤≤‡≥Ü ‡≤∏‡≤Ç‡≤™‡≥Ç‡≤∞‡≥ç‡≤£ ‡≤™‡≥ç‡≤Ø‡≤æ‡≤ï‡≥á‡≤ú‡≥ç ‡≤∏‡≥ç‡≤ï‡≥ç‡≤∞‡≤ø‡≤™‡≥ç‡≤ü‡≥ç (PKG Script) ‡≤∏‡≤ø‡≤¶‡≥ç‡≤ß‡≤™‡≤°‡≤ø‡≤∏‡≤ø.

‡≤∏‡≥ç‡≤ï‡≥ç‡≤∞‡≤ø‡≤™‡≥ç‡≤ü‡≥ç ‡≤´‡≤æ‡≤∞‡≥ç‡≤Æ‡≤æ‡≤ü‡≥ç ‡≤à ‡≤∞‡≥Ä‡≤§‡≤ø ‡≤á‡≤∞‡≤≤‡≤ø:

üì¶ ‡≤™‡≥ç‡≤Ø‡≤æ‡≤ï‡≥á‡≤ú‡≥ç ‡≤∏‡≥ç‡≤ï‡≥ç‡≤∞‡≤ø‡≤™‡≥ç‡≤ü‡≥ç (PKG Script)

Headline:
"<‡≤Æ‡≥Å‡≤ñ‡≥ç‡≤Ø ‡≤∂‡≥Ä‡≤∞‡≥ç‡≤∑‡≤ø‡≤ï‡≥Ü>"

Script:

üéô ‡≤Ü‡≤Ç‡≤ï‡≤∞‡≥ç ‡≤á‡≤Ç‡≤ü‡≥ç‡≤∞‡≥ã:
<‡≤ó‡≤Æ‡≤® ‡≤∏‡≥Ü‡≤≥‡≥Ü‡≤Ø‡≥Å‡≤µ ‡≤Ü‡≤∞‡≤Ç‡≤≠, ‡≤µ‡≤ø‡≤∑‡≤Ø ‡≤™‡≤∞‡≤ø‡≤ö‡≤Ø, ‡≤∏‡≥Å‡≤¶‡≥ç‡≤¶‡≤ø ‡≤∏‡≤¶‡≥ç‡≤Ø ‡≤é‡≤∑‡≥ç‡≤ü‡≥Å ‡≤Æ‡≤π‡≤§‡≥ç‡≤µ‡≤¶‡≥ç‡≤¶‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü ‡≤é‡≤Ç‡≤¨ ‡≤¨‡≤ø‡≤Ç‡≤¨>

üéô ‡≤π‡≤ø‡≤®‡≥ç‡≤®‡≥Ü‡≤≤‡≥Ü:
<‡≤à ‡≤µ‡≤ø‡≤∑‡≤Ø‡≤¶ ‡≤π‡≤ø‡≤Ç‡≤¶‡≤ø‡≤® ‡≤π‡≤ø‡≤®‡≥ç‡≤®‡≥Ü‡≤≤‡≥Ü, ‡≤à ‡≤π‡≤ø‡≤Ç‡≤¶‡≥Ü ‡≤è‡≤®‡≥Å ‡≤®‡≤°‡≥Ü‡≤¶‡≤ø‡≤¶‡≥Ü, ‡≤∏‡≤Ç‡≤¨‡≤Ç‡≤ß‡≤ø‡≤§ ‡≤ò‡≤ü‡≤®‡≥Ü‡≤ó‡≤≥‡≥Å>

üéô ‡≤µ‡≤∞‡≤¶‡≤ø:
<‡≤™‡≥Ç‡≤∞‡≥ç‡≤£ ‡≤µ‡≤ø‡≤∑‡≤Ø ‡≤µ‡≤ø‡≤µ‡≤∞‡≤£‡≥Ü, ‡≤ò‡≤ü‡≤®‡≥Ü‡≤Ø ‡≤µ‡≤ø‡≤∑‡≤Ø‡≤ó‡≤≥‡≥Å, ‡≤§‡≥Ä‡≤µ‡≥ç‡≤∞‡≤§‡≥Ü, ‡≤∏‡≥ç‡≤•‡≤≥‡≥Ä‡≤Ø‡≤∞ ‡≤™‡≥ç‡≤∞‡≤§‡≤ø‡≤ï‡≥ç‡≤∞‡≤ø‡≤Ø‡≥Ü>

üéô ‡≤Æ‡≥Å‡≤ï‡≥ç‡≤§‡≤æ‡≤Ø:
<‡≤Ö‡≤ß‡≤ø‡≤ï‡≤æ‡≤∞‡≤ø‡≤ó‡≤≥ ‡≤∏‡≥ç‡≤™‡≤Ç‡≤¶‡≤®‡≥Ü ‡≤∏‡≤æ‡≤ß‡≥ç‡≤Ø‡≤§‡≥Ü, ‡≤Æ‡≥Å‡≤Ç‡≤¶‡≤ø‡≤® ‡≤®‡≤°‡≥Ü‡≤Ø ‡≤¨‡≤ó‡≥ç‡≤ó‡≥Ü ‡≤™‡≥ç‡≤∞‡≤∂‡≥ç‡≤®‡≤æ‡≤§‡≥ç‡≤Æ‡≤ï ‡≤Æ‡≥Å‡≤ï‡≥ç‡≤§‡≤æ‡≤Ø>

‡≤µ‡≤ø‡≤∑‡≤Ø:
{content_text}
        """

    def generate_speed50_av_prompt(self, content_text: str, category: str = "‡≤∏‡≤æ‡≤Æ‡≤æ‡≤®‡≥ç‡≤Ø") -> str:
        """Generate Speed 50 AV prompt"""
        return f"""
‡≤®‡≥Ä‡≤µ‡≥Å ‡≤ï‡≤®‡≥ç‡≤®‡≤° ‡≤µ‡≤æ‡≤∞‡≥ç‡≤§‡≤æ ‡≤Ü‡≤Ç‡≤ï‡≤∞‡≥ç. ‡≤à ‡≤ï‡≥Ü‡≤≥‡≤ó‡≤ø‡≤® '{category}' ‡≤µ‡≤ø‡≤∑‡≤Ø‡≤ï‡≥ç‡≤ï‡≤æ‡≤ó‡≤ø 60-90 ‡≤∏‡≥Ü‡≤ï‡≥Ü‡≤Ç‡≤°‡≥Å‡≤ó‡≤≥ AV ‡≤∏‡≥ç‡≤ï‡≥ç‡≤∞‡≤ø‡≤™‡≥ç‡≤ü‡≥ç ‡≤∞‡≤ö‡≤ø‡≤∏‡≤ø:

‡≤®‡≤ø‡≤Ø‡≤Æ‡≤ó‡≤≥‡≥Å:
1. 1 ‡≤™‡≥ç‡≤Ø‡≤æ‡≤∞‡≤æ‡≤ó‡≥ç‡≤∞‡≤æ‡≤´‡≥ç ‡≤Æ‡≤æ‡≤§‡≥ç‡≤∞ (4-5 ‡≤µ‡≤æ‡≤ï‡≥ç‡≤Ø‡≤ó‡≤≥‡≥Å)
2. ‡≤™‡≥ç‡≤∞‡≤§‡≤ø ‡≤∂‡≥Ä‡≤∞‡≥ç‡≤∑‡≤ø‡≤ï‡≥Ü‡≤ó‡≥Ü ‡≤∏‡≥ç‡≤µ‡≤§‡≤Ç‡≤§‡≥ç‡≤∞ ‡≤∏‡≥ç‡≤ï‡≥ç‡≤∞‡≤ø‡≤™‡≥ç‡≤ü‡≥ç
3. ‡≤∏‡≥ç‡≤•‡≤≥, ‡≤ò‡≤ü‡≤®‡≥Ü, ‡≤™‡≥ç‡≤∞‡≤Æ‡≥Å‡≤ñ ‡≤µ‡≤ø‡≤µ‡≤∞‡≤ó‡≤≥‡≥Å, ‡≤í‡≤Ç‡≤¶‡≥Å ‡≤â‡≤≤‡≥ç‡≤≤‡≥á‡≤ñ‡≤ø‡≤§ ‡≤π‡≥á‡≤≥‡≤ø‡≤ï‡≥Ü ‡≤∏‡≥á‡≤∞‡≤ø‡≤∏‡≤ø
4. ‡≤∂‡≥Å‡≤¶‡≥ç‡≤ß ‡≤ï‡≤®‡≥ç‡≤®‡≤°, ‡≤Ø‡≤æ‡≤µ‡≥Å‡≤¶‡≥á ‡≤á‡≤Ç‡≤ó‡≥ç‡≤≤‡≤ø‡≤∑‡≥ç ‡≤™‡≤¶‡≤ó‡≤≥‡≤ø‡≤≤‡≥ç‡≤≤
5. TV ‡≤∂‡≥à‡≤≤‡≤ø‡≤Ø‡≤≤‡≥ç‡≤≤‡≤ø ‡≤∏‡≤∞‡≤≥ ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤∏‡≥ç‡≤™‡≤∑‡≥ç‡≤ü‡≤µ‡≤æ‡≤ó‡≤ø

‡≤µ‡≤ø‡≤∑‡≤Ø:
{content_text}
"""
    
    def generate_content(self, prompt: str) -> str:
        """Generate content using Gemini"""
        try:
            response = self.model.generate_content(
                prompt,
                safety_settings=[
                    {"category": "HARM_CATEGORY_HARASSMENT", "threshold": "BLOCK_NONE"},
                    {"category": "HARM_CATEGORY_HATE_SPEECH", "threshold": "BLOCK_NONE"},
                    {"category": "HARM_CATEGORY_SEXUALLY_EXPLICIT", "threshold": "BLOCK_NONE"},
                    {"category": "HARM_CATEGORY_DANGEROUS_CONTENT", "threshold": "BLOCK_NONE"},
                ]
            )
            return response.text.strip() if response.text else "‡≤∏‡≤Ç‡≤™‡≤æ‡≤¶‡≤®‡≥Ü ‡≤∏‡≤æ‡≤ß‡≥ç‡≤Ø‡≤µ‡≤æ‡≤ó‡≤ø‡≤≤‡≥ç‡≤≤."
        except Exception as e:
            logger.error(f"Gemini API error: {str(e)}")
            if "quota" in str(e).lower():
                return "‡≤ï‡≥ç‡≤∑‡≤Æ‡≤ø‡≤∏‡≤ø, API ‡≤Æ‡≤ø‡≤§‡≤ø ‡≤§‡≤≤‡≥Å‡≤™‡≤ø‡≤¶‡≥Ü. ‡≤¶‡≤Ø‡≤µ‡≤ø‡≤ü‡≥ç‡≤ü‡≥Å ‡≤®‡≤Ç‡≤§‡≤∞ ‡≤™‡≥ç‡≤∞‡≤Ø‡≤§‡≥ç‡≤®‡≤ø‡≤∏‡≤ø."
            elif "invalid" in str(e).lower():
                return "‡≤¶‡≥ã‡≤∑: ‡≤Ö‡≤Æ‡≤æ‡≤®‡≥ç‡≤Ø ‡≤µ‡≤ø‡≤®‡≤Ç‡≤§‡≤ø. ‡≤¶‡≤Ø‡≤µ‡≤ø‡≤ü‡≥ç‡≤ü‡≥Å ‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤á‡≤®‡≥ç‡≤™‡≥Å‡≤ü‡≥ç ‡≤™‡≤∞‡≤ø‡≤∂‡≥Ä‡≤≤‡≤ø‡≤∏‡≤ø."
            else:
                return "‡≤ï‡≥ç‡≤∑‡≤Æ‡≤ø‡≤∏‡≤ø, ‡≤∏‡≥á‡≤µ‡≥Ü‡≤Ø‡≤≤‡≥ç‡≤≤‡≤ø ‡≤§‡≤æ‡≤§‡≥ç‡≤ï‡≤æ‡≤≤‡≤ø‡≤ï ‡≤§‡≥ä‡≤Ç‡≤¶‡≤∞‡≥Ü. ‡≤¶‡≤Ø‡≤µ‡≤ø‡≤ü‡≥ç‡≤ü‡≥Å ‡≤®‡≤Ç‡≤§‡≤∞ ‡≤™‡≥ç‡≤∞‡≤Ø‡≤§‡≥ç‡≤®‡≤ø‡≤∏‡≤ø."